   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"button.c"
  21              	.Ltext0:
  22              		.file 1 "../button.c"
 1795              		.align	2
 1796              		.global	button_init
 1798              	button_init:
 1799              	.LFB0:
   1:../button.c   **** /*-------------------------------------------------------------------
   2:../button.c   **** **
   3:../button.c   **** **  Fichero:
   4:../button.c   **** **    button.c  10/6/2014
   5:../button.c   **** **
   6:../button.c   **** **    Estructura de Computadores
   7:../button.c   **** **    Dpto. de Arquitectura de Computadores y Automática
   8:../button.c   **** **    Facultad de Informática. Universidad Complutense de Madrid
   9:../button.c   **** **
  10:../button.c   **** **  Propósito:
  11:../button.c   **** **    Contiene las implementaciones de las funciones
  12:../button.c   **** **    para la gestión de los pulsadores de la placa de prototipado
  13:../button.c   **** **
  14:../button.c   **** **  Notas de diseño:
  15:../button.c   **** **
  16:../button.c   **** **-----------------------------------------------------------------*/
  17:../button.c   **** 
  18:../button.c   **** #include "44b.h"
  19:../button.c   **** #include "utils.h"
  20:../button.c   **** #include "button.h"
  21:../button.c   **** #include "leds.h"
  22:../button.c   **** 
  23:../button.c   **** 
  24:../button.c   **** // Configuración de la botonera
  25:../button.c   **** // - Habilitar EINT4567 por FIQ
  26:../button.c   **** // - Configura puerto G para generar interrupciones por EINT4567 por flanco de bajada (PCONG - EXTI
  27:../button.c   **** // - Configurar resistencia de pull-up
  28:../button.c   **** // - Desenmascarar el bit EINT4567 para permitr interrupciones por esa linea
  29:../button.c   **** void button_init( void )
  30:../button.c   **** {
 1800              		.loc 1 30 0
 1801              		.cfi_startproc
 1802              		@ Function supports interworking.
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805 0000 0DC0A0E1 		mov	ip, sp
 1806              	.LCFI0:
 1807              		.cfi_def_cfa_register 12
 1808 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1809 0008 04B04CE2 		sub	fp, ip, #4
 1810              		.cfi_offset 14, -8
 1811              		.cfi_offset 13, -12
 1812              		.cfi_offset 11, -16
 1813              	.LCFI1:
 1814              		.cfi_def_cfa 11, 4
  31:../button.c   **** 	rINTMOD |= BIT_EINT4567;
 1815              		.loc 1 31 0
 1816 000c 50309FE5 		ldr	r3, .L2
 1817 0010 4C209FE5 		ldr	r2, .L2
 1818 0014 002092E5 		ldr	r2, [r2, #0]
 1819 0018 022682E3 		orr	r2, r2, #2097152
 1820 001c 002083E5 		str	r2, [r3, #0]
  32:../button.c   **** 	rPCONG = 0xf000;
 1821              		.loc 1 32 0
 1822 0020 40309FE5 		ldr	r3, .L2+4
 1823 0024 0F2AA0E3 		mov	r2, #61440
 1824 0028 002083E5 		str	r2, [r3, #0]
  33:../button.c   **** 	rEXTINT = 0x22000000;//01x01x!
 1825              		.loc 1 33 0
 1826 002c 38309FE5 		ldr	r3, .L2+8
 1827 0030 2224A0E3 		mov	r2, #570425344
 1828 0034 002083E5 		str	r2, [r3, #0]
  34:../button.c   **** 	rPUPG = 0x0;
 1829              		.loc 1 34 0
 1830 0038 30309FE5 		ldr	r3, .L2+12
 1831 003c 0020A0E3 		mov	r2, #0
 1832 0040 002083E5 		str	r2, [r3, #0]
  35:../button.c   **** 	rINTMSK &= ~(BIT_EINT4567);
 1833              		.loc 1 35 0
 1834 0044 28309FE5 		ldr	r3, .L2+16
 1835 0048 24209FE5 		ldr	r2, .L2+16
 1836 004c 002092E5 		ldr	r2, [r2, #0]
 1837 0050 0226C2E3 		bic	r2, r2, #2097152
 1838 0054 002083E5 		str	r2, [r3, #0]
  36:../button.c   **** 
  37:../button.c   **** 
  38:../button.c   **** }
 1839              		.loc 1 38 0
 1840 0058 0CD04BE2 		sub	sp, fp, #12
 1841 005c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1842 0060 1EFF2FE1 		bx	lr
 1843              	.L3:
 1844              		.align	2
 1845              	.L2:
 1846 0064 0800E001 		.word	31457288
 1847 0068 4000D201 		.word	30539840
 1848 006c 5000D201 		.word	30539856
 1849 0070 4800D201 		.word	30539848
 1850 0074 0C00E001 		.word	31457292
 1851              		.cfi_endproc
 1852              	.LFE0:
 1854              		.align	2
 1855              		.global	DoDetecta
 1857              	DoDetecta:
 1858              	.LFB1:
  39:../button.c   **** 
  40:../button.c   **** // COMPLETAR LA FUNCION
  41:../button.c   **** // Almacenar en which_int el origen de la interrupcion:
  42:../button.c   **** //  - 4 para un boton, 8 para otro
  43:../button.c   **** // Al finalizar, borrar la interrupción en EXTINTPND
  44:../button.c   **** void DoDetecta(void) 
  45:../button.c   **** {
 1859              		.loc 1 45 0
 1860              		.cfi_startproc
 1861              		@ Function supports interworking.
 1862              		@ args = 0, pretend = 0, frame = 8
 1863              		@ frame_needed = 1, uses_anonymous_args = 0
 1864 0078 0DC0A0E1 		mov	ip, sp
 1865              	.LCFI2:
 1866              		.cfi_def_cfa_register 12
 1867 007c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1868 0080 04B04CE2 		sub	fp, ip, #4
 1869              		.cfi_offset 14, -8
 1870              		.cfi_offset 13, -12
 1871              		.cfi_offset 11, -16
 1872              	.LCFI3:
 1873              		.cfi_def_cfa 11, 4
 1874 0084 08D04DE2 		sub	sp, sp, #8
  46:../button.c   **** 	int which_int;
  47:../button.c   **** 
  48:../button.c   **** 	/* Identificar la interrupcion */
  49:../button.c   **** 	which_int = rEXTINTPND;
 1875              		.loc 1 49 0
 1876 0088 58309FE5 		ldr	r3, .L9
 1877 008c 003093E5 		ldr	r3, [r3, #0]
 1878 0090 10300BE5 		str	r3, [fp, #-16]
  50:../button.c   **** 
  51:../button.c   **** 	/* Espera fin de rebote de presiÛn */
  52:../button.c   **** 	// Delay hace espera activa. Tiempo expresado en unidades de 100us (2000 -> 200 ms)
  53:../button.c   **** 
  54:../button.c   **** 	Delay( 2000 );
 1879              		.loc 1 54 0
 1880 0094 7D0EA0E3 		mov	r0, #2000
 1881 0098 FEFFFFEB 		bl	Delay
  55:../button.c   **** 
  56:../button.c   **** 
  57:../button.c   **** 	/* Encender/apagar el LED adecuado */
  58:../button.c   **** 	switch (which_int) {
 1882              		.loc 1 58 0
 1883 009c 10301BE5 		ldr	r3, [fp, #-16]
 1884 00a0 040053E3 		cmp	r3, #4
 1885 00a4 0200000A 		beq	.L6
 1886 00a8 080053E3 		cmp	r3, #8
 1887 00ac 0200000A 		beq	.L7
  59:../button.c   **** 		case 4:
  60:../button.c   **** 			switchLed1();
  61:../button.c   **** 			break;
  62:../button.c   **** 		case 8:
  63:../button.c   **** 			switchLed2();
  64:../button.c   **** 			break;
  65:../button.c   **** 		default:
  66:../button.c   **** 			break;
 1888              		.loc 1 66 0
 1889 00b0 030000EA 		b	.L8
 1890              	.L6:
  60:../button.c   **** 			switchLed1();
 1891              		.loc 1 60 0
 1892 00b4 FEFFFFEB 		bl	switchLed1
  61:../button.c   **** 			break;
 1893              		.loc 1 61 0
 1894 00b8 010000EA 		b	.L8
 1895              	.L7:
  63:../button.c   **** 			switchLed2();
 1896              		.loc 1 63 0
 1897 00bc FEFFFFEB 		bl	switchLed2
  64:../button.c   **** 			break;
 1898              		.loc 1 64 0
 1899 00c0 0000A0E1 		mov	r0, r0	@ nop
 1900              	.L8:
  67:../button.c   ****    }
  68:../button.c   **** 
  69:../button.c   ****    /* Finalizar ISR */
  70:../button.c   **** 	rEXTINTPND = 0xf;
 1901              		.loc 1 70 0
 1902 00c4 1C309FE5 		ldr	r3, .L9
 1903 00c8 0F20A0E3 		mov	r2, #15
 1904 00cc 002083E5 		str	r2, [r3, #0]
  71:../button.c   **** 	rF_ISPC= ~(0x0);
 1905              		.loc 1 71 0
 1906 00d0 14309FE5 		ldr	r3, .L9+4
 1907 00d4 0020E0E3 		mvn	r2, #0
 1908 00d8 002083E5 		str	r2, [r3, #0]
  72:../button.c   **** 
  73:../button.c   **** }
 1909              		.loc 1 73 0
 1910 00dc 0CD04BE2 		sub	sp, fp, #12
 1911 00e0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1912 00e4 1EFF2FE1 		bx	lr
 1913              	.L10:
 1914              		.align	2
 1915              	.L9:
 1916 00e8 5400D201 		.word	30539860
 1917 00ec 3C00E001 		.word	31457340
 1918              		.cfi_endproc
 1919              	.LFE1:
 1921              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 button.c
C:\Users\JONATH~1\AppData\Local\Temp\cc4Tk9Qd.s:1795   .text:00000000 $a
C:\Users\JONATH~1\AppData\Local\Temp\cc4Tk9Qd.s:1798   .text:00000000 button_init
C:\Users\JONATH~1\AppData\Local\Temp\cc4Tk9Qd.s:1846   .text:00000064 $d
C:\Users\JONATH~1\AppData\Local\Temp\cc4Tk9Qd.s:1854   .text:00000078 $a
C:\Users\JONATH~1\AppData\Local\Temp\cc4Tk9Qd.s:1857   .text:00000078 DoDetecta
C:\Users\JONATH~1\AppData\Local\Temp\cc4Tk9Qd.s:1916   .text:000000e8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Delay
switchLed1
switchLed2
